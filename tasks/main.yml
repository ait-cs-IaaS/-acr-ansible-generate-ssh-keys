---
- name: Check for already existing private keys
  ansible.builtin.stat:
    path: '{{ ssh_keys_base_path }}/{{ user.ssh_key_path }}/id_{{ ssh_type }}'
  loop: '{{ ssh_users }}'
  loop_control:
    loop_var: user
    label: '{{ user.ssh_key_path }}'
  register: file_check

- name: Create ssh-keys directories and ensure file mode
  ansible.builtin.file:
    path: '{{ ssh_keys_base_path }}/{{ result.user.ssh_key_path }}/'
    state: directory
    recurse: true
    mode: u=rwX,g=X,o=X # we have to set the whole directory to rwX since git will set it to RW-R-R
  loop: '{{ file_check.results | default([]) }}'
  loop_control:
    loop_var: result
    label: '{{ result.user.ssh_key_path }}'
  when: not result.stat.exists

- name: Generate ssh-key pair
  async: 3600
  poll: 0
  community.crypto.openssh_keypair:
    path:
      '{{ ssh_keys_base_path }}/{{ result.user.ssh_key_path }}/id_{{ ssh_type }}'
    comment: '{{ result.user.username }}'
    type: '{{ ssh_type }}'
    size: '{{ ssh_size }}'
    mode: '{{ ssh_mode }}'
  loop: '{{ file_check.results | default([]) }}'
  loop_control:
    loop_var: result
    label: '{{ result.user.ssh_key_path }}/id_{{ ssh_type }}'
  when: not result.stat.exists
  register: key_gen_tasks
  ignore_errors: true

- name: Wait for SSH key pairs to be generated
  async_status:
    jid: '{{ item.ansible_job_id }}'
  register: key_gen_results
  until: key_gen_results.finished
  retries: 30
  delay: 2
  loop: '{{ key_gen_tasks.results }}'
  loop_control:
    label:
      '{{ item.result.user.ssh_key_path | default("user") + ": " +
      item.ansible_job_id | default(item.result.stat.path) | default(item) }}'
  when:
    key_gen_tasks is defined and key_gen_tasks.results is defined and
    item.ansible_job_id is defined
  ignore_errors: true
